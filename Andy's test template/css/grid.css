/*
	With this selector, we are specifying that all objects use
	the border-box model (not the content-box model)
*/
*, *:after, *:before {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;

}


/*
	Here we are using a 'fancy' css selector that is 
	specifying if the class of an item starts with
	'grid-col-', then we should apply the styling listed
*/
[class^='grid-col-'] {
	float: left;
	padding: 5; 
	text-align: left; /* center the content in this block by default */
	border: 1px solid blue;

}

/*
	Here we are defining our default column widths with the intention
	of keeping it 'mobile first'
*/
.grid-col-5of10, .grid-col-2of10 {
	width: 60px;
	border: 1px solid blue;
	padding: 15px;

}

.grid-col-3 {
	width: 25%;
}

.grid-col-9 {
	width: 75%;
}

.grid-col-10{
	width: 100%;
}

/*
	Using further @media queries, we specify that at a width of
	less than 30em it should collapse the 2/10 columns into one stack

	Think of this as saying, when display width > 30em, apply this
*/
@media (min-width: 30em) {

	.grid-col-2of10 {
		width: 20%;
	}

}


/*
	Here using @media queries, we are specifying when the display
	has a width less than 50em it should collapse the 5/10 columns 
	into one stack (hence width: 100%)

	Think of this as saying, when display width > 50em, apply this
*/
@media (min-width: 50em) {

	.grid-col-5of10 {
		width: 50%;
	}
